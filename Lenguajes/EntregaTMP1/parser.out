Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMA

Grammar

Rule 0     S' -> S
Rule 1     S -> main
Rule 2     main -> PC MAIN LPAREN RPAREN PC1 vars MODULO main1 PC2
Rule 3     PC -> <empty>
Rule 4     PC1 -> <empty>
Rule 5     PC2 -> <empty>
Rule 6     main1 -> BLOQUE
Rule 7     main1 -> BLOQUE main1
Rule 8     vars -> dec1 vars0 vars
Rule 9     vars -> <empty>
Rule 10    dec1 -> TIPO COLON
Rule 11    dec1 -> <empty>
Rule 12    TIPO -> INT
Rule 13    TIPO -> FL
Rule 14    TIPO -> BOOL
Rule 15    vars0 -> ID EQUAL F SEMICOLON
Rule 16    vars0 -> READ EQUAL ID
Rule 17    vars0 -> PRINT ID
Rule 18    vars0 -> <empty>
Rule 19    MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2
Rule 20    MODULO -> <empty>
Rule 21    MOD1 -> <empty>
Rule 22    MOD2 -> <empty>
Rule 23    BLOQUE -> BEGIN ESTATUTO BR END
Rule 24    BLOQUE -> <empty>
Rule 25    BR -> SEMICOLON ESTATUTO BR
Rule 26    BR -> <empty>
Rule 27    ESTATUTO -> vars
Rule 28    ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 FINIF
Rule 29    ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
Rule 30    ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
Rule 31    ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
Rule 32    ESTATUTO -> BLOQUE
Rule 33    ESTATUTO -> LCOR ID RCOR
Rule 34    ESTATUTO -> <empty>
Rule 35    THEN1 -> <empty>
Rule 36    IF1 -> ELSE ELSE1 ESTATUTO
Rule 37    IF1 -> <empty>
Rule 38    ELSE1 -> <empty>
Rule 39    FINIF -> <empty>
Rule 40    WHILE1 -> <empty>
Rule 41    WHILE2 -> <empty>
Rule 42    WHILE3 -> <empty>
Rule 43    DW1 -> SEMICOLON ESTATUTO DW1
Rule 44    DW1 -> <empty>
Rule 45    IDCTE -> ID
Rule 46    IDCTE -> CTE_INT
Rule 47    IDCTE -> CTE_FL
Rule 48    F -> IDCTE
Rule 49    F -> LPAREN E RPAREN
Rule 50    E -> T
Rule 51    E -> E PLUS T
Rule 52    E -> E MINUS T
Rule 53    T -> F
Rule 54    T -> T TIMES F
Rule 55    T -> T DIVIDE F
Rule 56    OPRL -> GT
Rule 57    OPRL -> LT
Rule 58    OPRL -> ET
Rule 59    L -> ID OPRL ID
Rule 60    L -> LPAREN D RPAREN
Rule 61    D -> L
Rule 62    D -> L D1
Rule 63    D1 -> OR L
Rule 64    D1 -> AND L
Rule 65    D1 -> <empty>

Terminals, with rules where they appear

AND                  : 64
BEGIN                : 23
BOOL                 : 14
COLON                : 10
COMA                 : 
CTE_FL               : 47
CTE_INT              : 46
DIVIDE               : 55
DWHILE               : 30
ELSE                 : 36
END                  : 19 23 29 30 31
EQUAL                : 15 16
ET                   : 58
FL                   : 13
FOR                  : 31
FUNCTION             : 19
GT                   : 56
ID                   : 15 16 17 19 33 45 59 59
IF                   : 28
INT                  : 12
LCOR                 : 33
LPAREN               : 2 19 31 49 60
LT                   : 57
MAIN                 : 2
MINUS                : 52
OR                   : 63
PIPE                 : 31 31
PLUS                 : 51
PRINT                : 17
RCOR                 : 33
READ                 : 16
RPAREN               : 2 19 31 49 60
SEMICOLON            : 15 25 43
THEN                 : 28
TIMES                : 54
UNTIL                : 30
WHILE                : 29
error                : 

Nonterminals, with rules where they appear

BLOQUE               : 6 7 19 32
BR                   : 23 25
D                    : 60
D1                   : 62
DW1                  : 30 43
E                    : 49 51 52
ELSE1                : 36
ESTATUTO             : 23 25 28 29 30 30 31 36 43
F                    : 15 53 54 55
FINIF                : 28
IDCTE                : 48
IF1                  : 28
L                    : 28 29 31 61 62 63 64
MOD1                 : 19
MOD2                 : 19
MODULO               : 2 19
OPRL                 : 59
PC                   : 2
PC1                  : 2
PC2                  : 2
S                    : 0
T                    : 50 51 52 54 55
THEN1                : 28
TIPO                 : 10
WHILE1               : 29
WHILE2               : 29
WHILE3               : 29
dec1                 : 8
main                 : 1
main1                : 2 7
vars                 : 2 8 19 27 31 31
vars0                : 8

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . main
    (2) main -> . PC MAIN LPAREN RPAREN PC1 vars MODULO main1 PC2
    (3) PC -> .

    MAIN            reduce using rule 3 (PC -> .)

    S                              shift and go to state 1
    main                           shift and go to state 2
    PC                             shift and go to state 3

state 1

    (0) S' -> S .



state 2

    (1) S -> main .

    $end            reduce using rule 1 (S -> main .)


state 3

    (2) main -> PC . MAIN LPAREN RPAREN PC1 vars MODULO main1 PC2

    MAIN            shift and go to state 4


state 4

    (2) main -> PC MAIN . LPAREN RPAREN PC1 vars MODULO main1 PC2

    LPAREN          shift and go to state 5


state 5

    (2) main -> PC MAIN LPAREN . RPAREN PC1 vars MODULO main1 PC2

    RPAREN          shift and go to state 6


state 6

    (2) main -> PC MAIN LPAREN RPAREN . PC1 vars MODULO main1 PC2
    (4) PC1 -> .

    INT             reduce using rule 4 (PC1 -> .)
    FL              reduce using rule 4 (PC1 -> .)
    BOOL            reduce using rule 4 (PC1 -> .)
    FUNCTION        reduce using rule 4 (PC1 -> .)
    BEGIN           reduce using rule 4 (PC1 -> .)
    ID              reduce using rule 4 (PC1 -> .)
    READ            reduce using rule 4 (PC1 -> .)
    PRINT           reduce using rule 4 (PC1 -> .)
    $end            reduce using rule 4 (PC1 -> .)

    PC1                            shift and go to state 7

state 7

    (2) main -> PC MAIN LPAREN RPAREN PC1 . vars MODULO main1 PC2
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for BEGIN resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for $end resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    FUNCTION        reduce using rule 9 (vars -> .)
    BEGIN           reduce using rule 9 (vars -> .)
    $end            reduce using rule 9 (vars -> .)
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! FUNCTION        [ reduce using rule 11 (dec1 -> .) ]
  ! BEGIN           [ reduce using rule 11 (dec1 -> .) ]
  ! $end            [ reduce using rule 11 (dec1 -> .) ]

    vars                           shift and go to state 8
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 8

    (2) main -> PC MAIN LPAREN RPAREN PC1 vars . MODULO main1 PC2
    (19) MODULO -> . FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2
    (20) MODULO -> .

    FUNCTION        shift and go to state 15
    BEGIN           reduce using rule 20 (MODULO -> .)
    $end            reduce using rule 20 (MODULO -> .)

    MODULO                         shift and go to state 14

state 9

    (8) vars -> dec1 . vars0 vars
    (15) vars0 -> . ID EQUAL F SEMICOLON
    (16) vars0 -> . READ EQUAL ID
    (17) vars0 -> . PRINT ID
    (18) vars0 -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    ID              shift and go to state 17
    READ            shift and go to state 18
    PRINT           shift and go to state 19
    INT             reduce using rule 18 (vars0 -> .)
    FL              reduce using rule 18 (vars0 -> .)
    BOOL            reduce using rule 18 (vars0 -> .)
    FUNCTION        reduce using rule 18 (vars0 -> .)
    BEGIN           reduce using rule 18 (vars0 -> .)
    $end            reduce using rule 18 (vars0 -> .)
    SEMICOLON       reduce using rule 18 (vars0 -> .)
    END             reduce using rule 18 (vars0 -> .)
    UNTIL           reduce using rule 18 (vars0 -> .)
    PIPE            reduce using rule 18 (vars0 -> .)
    ELSE            reduce using rule 18 (vars0 -> .)
    RPAREN          reduce using rule 18 (vars0 -> .)

  ! ID              [ reduce using rule 18 (vars0 -> .) ]
  ! READ            [ reduce using rule 18 (vars0 -> .) ]
  ! PRINT           [ reduce using rule 18 (vars0 -> .) ]

    vars0                          shift and go to state 16

state 10

    (10) dec1 -> TIPO . COLON

    COLON           shift and go to state 20


state 11

    (12) TIPO -> INT .

    COLON           reduce using rule 12 (TIPO -> INT .)


state 12

    (13) TIPO -> FL .

    COLON           reduce using rule 13 (TIPO -> FL .)


state 13

    (14) TIPO -> BOOL .

    COLON           reduce using rule 14 (TIPO -> BOOL .)


state 14

    (2) main -> PC MAIN LPAREN RPAREN PC1 vars MODULO . main1 PC2
    (6) main1 -> . BLOQUE
    (7) main1 -> . BLOQUE main1
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 23
    $end            reduce using rule 24 (BLOQUE -> .)

  ! BEGIN           [ reduce using rule 24 (BLOQUE -> .) ]

    main1                          shift and go to state 21
    BLOQUE                         shift and go to state 22

state 15

    (19) MODULO -> FUNCTION . ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2

    ID              shift and go to state 24


state 16

    (8) vars -> dec1 vars0 . vars
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for FUNCTION resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for BEGIN resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for $end resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for PIPE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    FUNCTION        reduce using rule 9 (vars -> .)
    BEGIN           reduce using rule 9 (vars -> .)
    $end            reduce using rule 9 (vars -> .)
    SEMICOLON       reduce using rule 9 (vars -> .)
    END             reduce using rule 9 (vars -> .)
    UNTIL           reduce using rule 9 (vars -> .)
    PIPE            reduce using rule 9 (vars -> .)
    ELSE            reduce using rule 9 (vars -> .)
    RPAREN          reduce using rule 9 (vars -> .)
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! FUNCTION        [ reduce using rule 11 (dec1 -> .) ]
  ! BEGIN           [ reduce using rule 11 (dec1 -> .) ]
  ! $end            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]
  ! UNTIL           [ reduce using rule 11 (dec1 -> .) ]
  ! PIPE            [ reduce using rule 11 (dec1 -> .) ]
  ! ELSE            [ reduce using rule 11 (dec1 -> .) ]
  ! RPAREN          [ reduce using rule 11 (dec1 -> .) ]

    dec1                           shift and go to state 9
    vars                           shift and go to state 25
    TIPO                           shift and go to state 10

state 17

    (15) vars0 -> ID . EQUAL F SEMICOLON

    EQUAL           shift and go to state 26


state 18

    (16) vars0 -> READ . EQUAL ID

    EQUAL           shift and go to state 27


state 19

    (17) vars0 -> PRINT . ID

    ID              shift and go to state 28


state 20

    (10) dec1 -> TIPO COLON .

    ID              reduce using rule 10 (dec1 -> TIPO COLON .)
    READ            reduce using rule 10 (dec1 -> TIPO COLON .)
    PRINT           reduce using rule 10 (dec1 -> TIPO COLON .)
    INT             reduce using rule 10 (dec1 -> TIPO COLON .)
    FL              reduce using rule 10 (dec1 -> TIPO COLON .)
    BOOL            reduce using rule 10 (dec1 -> TIPO COLON .)
    FUNCTION        reduce using rule 10 (dec1 -> TIPO COLON .)
    BEGIN           reduce using rule 10 (dec1 -> TIPO COLON .)
    $end            reduce using rule 10 (dec1 -> TIPO COLON .)
    SEMICOLON       reduce using rule 10 (dec1 -> TIPO COLON .)
    END             reduce using rule 10 (dec1 -> TIPO COLON .)
    UNTIL           reduce using rule 10 (dec1 -> TIPO COLON .)
    PIPE            reduce using rule 10 (dec1 -> TIPO COLON .)
    ELSE            reduce using rule 10 (dec1 -> TIPO COLON .)
    RPAREN          reduce using rule 10 (dec1 -> TIPO COLON .)


state 21

    (2) main -> PC MAIN LPAREN RPAREN PC1 vars MODULO main1 . PC2
    (5) PC2 -> .

    $end            reduce using rule 5 (PC2 -> .)

    PC2                            shift and go to state 29

state 22

    (6) main1 -> BLOQUE .
    (7) main1 -> BLOQUE . main1
    (6) main1 -> . BLOQUE
    (7) main1 -> . BLOQUE main1
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 6 (main1 -> BLOQUE .)
    $end            reduce using rule 6 (main1 -> BLOQUE .)
    BEGIN           shift and go to state 23

  ! BEGIN           [ reduce using rule 24 (BLOQUE -> .) ]
  ! $end            [ reduce using rule 24 (BLOQUE -> .) ]

    BLOQUE                         shift and go to state 22
    main1                          shift and go to state 30

state 23

    (23) BLOQUE -> BEGIN . ESTATUTO BR END
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    SEMICOLON       reduce using rule 9 (vars -> .)
    END             reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! SEMICOLON       [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 24 (BLOQUE -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 31
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 24

    (19) MODULO -> FUNCTION ID . MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2
    (21) MOD1 -> .

    LPAREN          reduce using rule 21 (MOD1 -> .)

    MOD1                           shift and go to state 39

state 25

    (8) vars -> dec1 vars0 vars .

    FUNCTION        reduce using rule 8 (vars -> dec1 vars0 vars .)
    BEGIN           reduce using rule 8 (vars -> dec1 vars0 vars .)
    $end            reduce using rule 8 (vars -> dec1 vars0 vars .)
    SEMICOLON       reduce using rule 8 (vars -> dec1 vars0 vars .)
    END             reduce using rule 8 (vars -> dec1 vars0 vars .)
    UNTIL           reduce using rule 8 (vars -> dec1 vars0 vars .)
    PIPE            reduce using rule 8 (vars -> dec1 vars0 vars .)
    ELSE            reduce using rule 8 (vars -> dec1 vars0 vars .)
    RPAREN          reduce using rule 8 (vars -> dec1 vars0 vars .)


state 26

    (15) vars0 -> ID EQUAL . F SEMICOLON
    (48) F -> . IDCTE
    (49) F -> . LPAREN E RPAREN
    (45) IDCTE -> . ID
    (46) IDCTE -> . CTE_INT
    (47) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 43
    ID              shift and go to state 40
    CTE_INT         shift and go to state 44
    CTE_FL          shift and go to state 45

    F                              shift and go to state 41
    IDCTE                          shift and go to state 42

state 27

    (16) vars0 -> READ EQUAL . ID

    ID              shift and go to state 46


state 28

    (17) vars0 -> PRINT ID .

    INT             reduce using rule 17 (vars0 -> PRINT ID .)
    FL              reduce using rule 17 (vars0 -> PRINT ID .)
    BOOL            reduce using rule 17 (vars0 -> PRINT ID .)
    ID              reduce using rule 17 (vars0 -> PRINT ID .)
    READ            reduce using rule 17 (vars0 -> PRINT ID .)
    PRINT           reduce using rule 17 (vars0 -> PRINT ID .)
    FUNCTION        reduce using rule 17 (vars0 -> PRINT ID .)
    BEGIN           reduce using rule 17 (vars0 -> PRINT ID .)
    $end            reduce using rule 17 (vars0 -> PRINT ID .)
    SEMICOLON       reduce using rule 17 (vars0 -> PRINT ID .)
    END             reduce using rule 17 (vars0 -> PRINT ID .)
    UNTIL           reduce using rule 17 (vars0 -> PRINT ID .)
    PIPE            reduce using rule 17 (vars0 -> PRINT ID .)
    ELSE            reduce using rule 17 (vars0 -> PRINT ID .)
    RPAREN          reduce using rule 17 (vars0 -> PRINT ID .)


state 29

    (2) main -> PC MAIN LPAREN RPAREN PC1 vars MODULO main1 PC2 .

    $end            reduce using rule 2 (main -> PC MAIN LPAREN RPAREN PC1 vars MODULO main1 PC2 .)


state 30

    (7) main1 -> BLOQUE main1 .

    $end            reduce using rule 7 (main1 -> BLOQUE main1 .)


state 31

    (23) BLOQUE -> BEGIN ESTATUTO . BR END
    (25) BR -> . SEMICOLON ESTATUTO BR
    (26) BR -> .

    SEMICOLON       shift and go to state 48
    END             reduce using rule 26 (BR -> .)

    BR                             shift and go to state 47

state 32

    (27) ESTATUTO -> vars .

    SEMICOLON       reduce using rule 27 (ESTATUTO -> vars .)
    END             reduce using rule 27 (ESTATUTO -> vars .)
    UNTIL           reduce using rule 27 (ESTATUTO -> vars .)
    ELSE            reduce using rule 27 (ESTATUTO -> vars .)


state 33

    (28) ESTATUTO -> IF . L THEN THEN1 ESTATUTO IF1 FINIF
    (59) L -> . ID OPRL ID
    (60) L -> . LPAREN D RPAREN

    ID              shift and go to state 50
    LPAREN          shift and go to state 51

    L                              shift and go to state 49

state 34

    (29) ESTATUTO -> WHILE . WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (40) WHILE1 -> .

    ID              reduce using rule 40 (WHILE1 -> .)
    LPAREN          reduce using rule 40 (WHILE1 -> .)

    WHILE1                         shift and go to state 52

state 35

    (30) ESTATUTO -> DWHILE . ESTATUTO DW1 UNTIL ESTATUTO END
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    SEMICOLON       reduce using rule 9 (vars -> .)
    UNTIL           reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! SEMICOLON       [ reduce using rule 34 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 34 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 24 (BLOQUE -> .) ]
  ! UNTIL           [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! UNTIL           [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 53
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 36

    (31) ESTATUTO -> FOR . LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END

    LPAREN          shift and go to state 54


state 37

    (32) ESTATUTO -> BLOQUE .

    SEMICOLON       reduce using rule 32 (ESTATUTO -> BLOQUE .)
    END             reduce using rule 32 (ESTATUTO -> BLOQUE .)
    UNTIL           reduce using rule 32 (ESTATUTO -> BLOQUE .)
    ELSE            reduce using rule 32 (ESTATUTO -> BLOQUE .)


state 38

    (33) ESTATUTO -> LCOR . ID RCOR

    ID              shift and go to state 55


state 39

    (19) MODULO -> FUNCTION ID MOD1 . LPAREN RPAREN vars BLOQUE END MODULO MOD2

    LPAREN          shift and go to state 56


state 40

    (45) IDCTE -> ID .

    SEMICOLON       reduce using rule 45 (IDCTE -> ID .)
    TIMES           reduce using rule 45 (IDCTE -> ID .)
    DIVIDE          reduce using rule 45 (IDCTE -> ID .)
    RPAREN          reduce using rule 45 (IDCTE -> ID .)
    PLUS            reduce using rule 45 (IDCTE -> ID .)
    MINUS           reduce using rule 45 (IDCTE -> ID .)


state 41

    (15) vars0 -> ID EQUAL F . SEMICOLON

    SEMICOLON       shift and go to state 57


state 42

    (48) F -> IDCTE .

    SEMICOLON       reduce using rule 48 (F -> IDCTE .)
    TIMES           reduce using rule 48 (F -> IDCTE .)
    DIVIDE          reduce using rule 48 (F -> IDCTE .)
    RPAREN          reduce using rule 48 (F -> IDCTE .)
    PLUS            reduce using rule 48 (F -> IDCTE .)
    MINUS           reduce using rule 48 (F -> IDCTE .)


state 43

    (49) F -> LPAREN . E RPAREN
    (50) E -> . T
    (51) E -> . E PLUS T
    (52) E -> . E MINUS T
    (53) T -> . F
    (54) T -> . T TIMES F
    (55) T -> . T DIVIDE F
    (48) F -> . IDCTE
    (49) F -> . LPAREN E RPAREN
    (45) IDCTE -> . ID
    (46) IDCTE -> . CTE_INT
    (47) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 43
    ID              shift and go to state 40
    CTE_INT         shift and go to state 44
    CTE_FL          shift and go to state 45

    E                              shift and go to state 58
    T                              shift and go to state 59
    F                              shift and go to state 60
    IDCTE                          shift and go to state 42

state 44

    (46) IDCTE -> CTE_INT .

    SEMICOLON       reduce using rule 46 (IDCTE -> CTE_INT .)
    TIMES           reduce using rule 46 (IDCTE -> CTE_INT .)
    DIVIDE          reduce using rule 46 (IDCTE -> CTE_INT .)
    RPAREN          reduce using rule 46 (IDCTE -> CTE_INT .)
    PLUS            reduce using rule 46 (IDCTE -> CTE_INT .)
    MINUS           reduce using rule 46 (IDCTE -> CTE_INT .)


state 45

    (47) IDCTE -> CTE_FL .

    SEMICOLON       reduce using rule 47 (IDCTE -> CTE_FL .)
    TIMES           reduce using rule 47 (IDCTE -> CTE_FL .)
    DIVIDE          reduce using rule 47 (IDCTE -> CTE_FL .)
    RPAREN          reduce using rule 47 (IDCTE -> CTE_FL .)
    PLUS            reduce using rule 47 (IDCTE -> CTE_FL .)
    MINUS           reduce using rule 47 (IDCTE -> CTE_FL .)


state 46

    (16) vars0 -> READ EQUAL ID .

    INT             reduce using rule 16 (vars0 -> READ EQUAL ID .)
    FL              reduce using rule 16 (vars0 -> READ EQUAL ID .)
    BOOL            reduce using rule 16 (vars0 -> READ EQUAL ID .)
    ID              reduce using rule 16 (vars0 -> READ EQUAL ID .)
    READ            reduce using rule 16 (vars0 -> READ EQUAL ID .)
    PRINT           reduce using rule 16 (vars0 -> READ EQUAL ID .)
    FUNCTION        reduce using rule 16 (vars0 -> READ EQUAL ID .)
    BEGIN           reduce using rule 16 (vars0 -> READ EQUAL ID .)
    $end            reduce using rule 16 (vars0 -> READ EQUAL ID .)
    SEMICOLON       reduce using rule 16 (vars0 -> READ EQUAL ID .)
    END             reduce using rule 16 (vars0 -> READ EQUAL ID .)
    UNTIL           reduce using rule 16 (vars0 -> READ EQUAL ID .)
    PIPE            reduce using rule 16 (vars0 -> READ EQUAL ID .)
    ELSE            reduce using rule 16 (vars0 -> READ EQUAL ID .)
    RPAREN          reduce using rule 16 (vars0 -> READ EQUAL ID .)


state 47

    (23) BLOQUE -> BEGIN ESTATUTO BR . END

    END             shift and go to state 61


state 48

    (25) BR -> SEMICOLON . ESTATUTO BR
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    SEMICOLON       reduce using rule 9 (vars -> .)
    END             reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! SEMICOLON       [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 24 (BLOQUE -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 62
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 49

    (28) ESTATUTO -> IF L . THEN THEN1 ESTATUTO IF1 FINIF

    THEN            shift and go to state 63


state 50

    (59) L -> ID . OPRL ID
    (56) OPRL -> . GT
    (57) OPRL -> . LT
    (58) OPRL -> . ET

    GT              shift and go to state 65
    LT              shift and go to state 66
    ET              shift and go to state 67

    OPRL                           shift and go to state 64

state 51

    (60) L -> LPAREN . D RPAREN
    (61) D -> . L
    (62) D -> . L D1
    (59) L -> . ID OPRL ID
    (60) L -> . LPAREN D RPAREN

    ID              shift and go to state 50
    LPAREN          shift and go to state 51

    D                              shift and go to state 68
    L                              shift and go to state 69

state 52

    (29) ESTATUTO -> WHILE WHILE1 . L WHILE2 ESTATUTO WHILE3 END
    (59) L -> . ID OPRL ID
    (60) L -> . LPAREN D RPAREN

    ID              shift and go to state 50
    LPAREN          shift and go to state 51

    L                              shift and go to state 70

state 53

    (30) ESTATUTO -> DWHILE ESTATUTO . DW1 UNTIL ESTATUTO END
    (43) DW1 -> . SEMICOLON ESTATUTO DW1
    (44) DW1 -> .

    SEMICOLON       shift and go to state 72
    UNTIL           reduce using rule 44 (DW1 -> .)

    DW1                            shift and go to state 71

state 54

    (31) ESTATUTO -> FOR LPAREN . vars PIPE L PIPE vars RPAREN ESTATUTO END
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for PIPE resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    PIPE            reduce using rule 9 (vars -> .)
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! PIPE            [ reduce using rule 11 (dec1 -> .) ]

    vars                           shift and go to state 73
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 55

    (33) ESTATUTO -> LCOR ID . RCOR

    RCOR            shift and go to state 74


state 56

    (19) MODULO -> FUNCTION ID MOD1 LPAREN . RPAREN vars BLOQUE END MODULO MOD2

    RPAREN          shift and go to state 75


state 57

    (15) vars0 -> ID EQUAL F SEMICOLON .

    INT             reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    FL              reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    BOOL            reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    ID              reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    READ            reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    PRINT           reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    FUNCTION        reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    BEGIN           reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    $end            reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    SEMICOLON       reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    END             reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    UNTIL           reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    PIPE            reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    ELSE            reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)
    RPAREN          reduce using rule 15 (vars0 -> ID EQUAL F SEMICOLON .)


state 58

    (49) F -> LPAREN E . RPAREN
    (51) E -> E . PLUS T
    (52) E -> E . MINUS T

    RPAREN          shift and go to state 76
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78


state 59

    (50) E -> T .
    (54) T -> T . TIMES F
    (55) T -> T . DIVIDE F

    RPAREN          reduce using rule 50 (E -> T .)
    PLUS            reduce using rule 50 (E -> T .)
    MINUS           reduce using rule 50 (E -> T .)
    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 80


state 60

    (53) T -> F .

    TIMES           reduce using rule 53 (T -> F .)
    DIVIDE          reduce using rule 53 (T -> F .)
    RPAREN          reduce using rule 53 (T -> F .)
    PLUS            reduce using rule 53 (T -> F .)
    MINUS           reduce using rule 53 (T -> F .)


state 61

    (23) BLOQUE -> BEGIN ESTATUTO BR END .

    BEGIN           reduce using rule 23 (BLOQUE -> BEGIN ESTATUTO BR END .)
    $end            reduce using rule 23 (BLOQUE -> BEGIN ESTATUTO BR END .)
    SEMICOLON       reduce using rule 23 (BLOQUE -> BEGIN ESTATUTO BR END .)
    END             reduce using rule 23 (BLOQUE -> BEGIN ESTATUTO BR END .)
    UNTIL           reduce using rule 23 (BLOQUE -> BEGIN ESTATUTO BR END .)
    ELSE            reduce using rule 23 (BLOQUE -> BEGIN ESTATUTO BR END .)


state 62

    (25) BR -> SEMICOLON ESTATUTO . BR
    (25) BR -> . SEMICOLON ESTATUTO BR
    (26) BR -> .

    SEMICOLON       shift and go to state 48
    END             reduce using rule 26 (BR -> .)

    BR                             shift and go to state 81

state 63

    (28) ESTATUTO -> IF L THEN . THEN1 ESTATUTO IF1 FINIF
    (35) THEN1 -> .

    IF              reduce using rule 35 (THEN1 -> .)
    WHILE           reduce using rule 35 (THEN1 -> .)
    DWHILE          reduce using rule 35 (THEN1 -> .)
    FOR             reduce using rule 35 (THEN1 -> .)
    LCOR            reduce using rule 35 (THEN1 -> .)
    BEGIN           reduce using rule 35 (THEN1 -> .)
    INT             reduce using rule 35 (THEN1 -> .)
    FL              reduce using rule 35 (THEN1 -> .)
    BOOL            reduce using rule 35 (THEN1 -> .)
    ELSE            reduce using rule 35 (THEN1 -> .)
    ID              reduce using rule 35 (THEN1 -> .)
    READ            reduce using rule 35 (THEN1 -> .)
    PRINT           reduce using rule 35 (THEN1 -> .)
    SEMICOLON       reduce using rule 35 (THEN1 -> .)
    END             reduce using rule 35 (THEN1 -> .)
    UNTIL           reduce using rule 35 (THEN1 -> .)

    THEN1                          shift and go to state 82

state 64

    (59) L -> ID OPRL . ID

    ID              shift and go to state 83


state 65

    (56) OPRL -> GT .

    ID              reduce using rule 56 (OPRL -> GT .)


state 66

    (57) OPRL -> LT .

    ID              reduce using rule 57 (OPRL -> LT .)


state 67

    (58) OPRL -> ET .

    ID              reduce using rule 58 (OPRL -> ET .)


state 68

    (60) L -> LPAREN D . RPAREN

    RPAREN          shift and go to state 84


state 69

    (61) D -> L .
    (62) D -> L . D1
    (63) D1 -> . OR L
    (64) D1 -> . AND L
    (65) D1 -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 61 (D -> L .)
    RPAREN          reduce using rule 61 (D -> L .)
    OR              shift and go to state 86
    AND             shift and go to state 87

  ! RPAREN          [ reduce using rule 65 (D1 -> .) ]

    D1                             shift and go to state 85

state 70

    (29) ESTATUTO -> WHILE WHILE1 L . WHILE2 ESTATUTO WHILE3 END
    (41) WHILE2 -> .

    IF              reduce using rule 41 (WHILE2 -> .)
    WHILE           reduce using rule 41 (WHILE2 -> .)
    DWHILE          reduce using rule 41 (WHILE2 -> .)
    FOR             reduce using rule 41 (WHILE2 -> .)
    LCOR            reduce using rule 41 (WHILE2 -> .)
    BEGIN           reduce using rule 41 (WHILE2 -> .)
    INT             reduce using rule 41 (WHILE2 -> .)
    FL              reduce using rule 41 (WHILE2 -> .)
    BOOL            reduce using rule 41 (WHILE2 -> .)
    END             reduce using rule 41 (WHILE2 -> .)
    ID              reduce using rule 41 (WHILE2 -> .)
    READ            reduce using rule 41 (WHILE2 -> .)
    PRINT           reduce using rule 41 (WHILE2 -> .)

    WHILE2                         shift and go to state 88

state 71

    (30) ESTATUTO -> DWHILE ESTATUTO DW1 . UNTIL ESTATUTO END

    UNTIL           shift and go to state 89


state 72

    (43) DW1 -> SEMICOLON . ESTATUTO DW1
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    SEMICOLON       reduce using rule 9 (vars -> .)
    UNTIL           reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! SEMICOLON       [ reduce using rule 34 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 34 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 24 (BLOQUE -> .) ]
  ! UNTIL           [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! UNTIL           [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 90
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 73

    (31) ESTATUTO -> FOR LPAREN vars . PIPE L PIPE vars RPAREN ESTATUTO END

    PIPE            shift and go to state 91


state 74

    (33) ESTATUTO -> LCOR ID RCOR .

    SEMICOLON       reduce using rule 33 (ESTATUTO -> LCOR ID RCOR .)
    END             reduce using rule 33 (ESTATUTO -> LCOR ID RCOR .)
    UNTIL           reduce using rule 33 (ESTATUTO -> LCOR ID RCOR .)
    ELSE            reduce using rule 33 (ESTATUTO -> LCOR ID RCOR .)


state 75

    (19) MODULO -> FUNCTION ID MOD1 LPAREN RPAREN . vars BLOQUE END MODULO MOD2
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for BEGIN resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    BEGIN           reduce using rule 9 (vars -> .)
    END             reduce using rule 9 (vars -> .)
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! BEGIN           [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]

    vars                           shift and go to state 92
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 76

    (49) F -> LPAREN E RPAREN .

    SEMICOLON       reduce using rule 49 (F -> LPAREN E RPAREN .)
    TIMES           reduce using rule 49 (F -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 49 (F -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 49 (F -> LPAREN E RPAREN .)
    PLUS            reduce using rule 49 (F -> LPAREN E RPAREN .)
    MINUS           reduce using rule 49 (F -> LPAREN E RPAREN .)


state 77

    (51) E -> E PLUS . T
    (53) T -> . F
    (54) T -> . T TIMES F
    (55) T -> . T DIVIDE F
    (48) F -> . IDCTE
    (49) F -> . LPAREN E RPAREN
    (45) IDCTE -> . ID
    (46) IDCTE -> . CTE_INT
    (47) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 43
    ID              shift and go to state 40
    CTE_INT         shift and go to state 44
    CTE_FL          shift and go to state 45

    T                              shift and go to state 93
    F                              shift and go to state 60
    IDCTE                          shift and go to state 42

state 78

    (52) E -> E MINUS . T
    (53) T -> . F
    (54) T -> . T TIMES F
    (55) T -> . T DIVIDE F
    (48) F -> . IDCTE
    (49) F -> . LPAREN E RPAREN
    (45) IDCTE -> . ID
    (46) IDCTE -> . CTE_INT
    (47) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 43
    ID              shift and go to state 40
    CTE_INT         shift and go to state 44
    CTE_FL          shift and go to state 45

    T                              shift and go to state 94
    F                              shift and go to state 60
    IDCTE                          shift and go to state 42

state 79

    (54) T -> T TIMES . F
    (48) F -> . IDCTE
    (49) F -> . LPAREN E RPAREN
    (45) IDCTE -> . ID
    (46) IDCTE -> . CTE_INT
    (47) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 43
    ID              shift and go to state 40
    CTE_INT         shift and go to state 44
    CTE_FL          shift and go to state 45

    F                              shift and go to state 95
    IDCTE                          shift and go to state 42

state 80

    (55) T -> T DIVIDE . F
    (48) F -> . IDCTE
    (49) F -> . LPAREN E RPAREN
    (45) IDCTE -> . ID
    (46) IDCTE -> . CTE_INT
    (47) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 43
    ID              shift and go to state 40
    CTE_INT         shift and go to state 44
    CTE_FL          shift and go to state 45

    F                              shift and go to state 96
    IDCTE                          shift and go to state 42

state 81

    (25) BR -> SEMICOLON ESTATUTO BR .

    END             reduce using rule 25 (BR -> SEMICOLON ESTATUTO BR .)


state 82

    (28) ESTATUTO -> IF L THEN THEN1 . ESTATUTO IF1 FINIF
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    ELSE            reduce using rule 9 (vars -> .)
    SEMICOLON       reduce using rule 9 (vars -> .)
    END             reduce using rule 9 (vars -> .)
    UNTIL           reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! ELSE            [ reduce using rule 34 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 34 (ESTATUTO -> .) ]
  ! ELSE            [ reduce using rule 24 (BLOQUE -> .) ]
  ! SEMICOLON       [ reduce using rule 24 (BLOQUE -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! UNTIL           [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! ELSE            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]
  ! UNTIL           [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 97
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 83

    (59) L -> ID OPRL ID .

    THEN            reduce using rule 59 (L -> ID OPRL ID .)
    OR              reduce using rule 59 (L -> ID OPRL ID .)
    AND             reduce using rule 59 (L -> ID OPRL ID .)
    RPAREN          reduce using rule 59 (L -> ID OPRL ID .)
    IF              reduce using rule 59 (L -> ID OPRL ID .)
    WHILE           reduce using rule 59 (L -> ID OPRL ID .)
    DWHILE          reduce using rule 59 (L -> ID OPRL ID .)
    FOR             reduce using rule 59 (L -> ID OPRL ID .)
    LCOR            reduce using rule 59 (L -> ID OPRL ID .)
    BEGIN           reduce using rule 59 (L -> ID OPRL ID .)
    INT             reduce using rule 59 (L -> ID OPRL ID .)
    FL              reduce using rule 59 (L -> ID OPRL ID .)
    BOOL            reduce using rule 59 (L -> ID OPRL ID .)
    END             reduce using rule 59 (L -> ID OPRL ID .)
    ID              reduce using rule 59 (L -> ID OPRL ID .)
    READ            reduce using rule 59 (L -> ID OPRL ID .)
    PRINT           reduce using rule 59 (L -> ID OPRL ID .)
    PIPE            reduce using rule 59 (L -> ID OPRL ID .)


state 84

    (60) L -> LPAREN D RPAREN .

    THEN            reduce using rule 60 (L -> LPAREN D RPAREN .)
    OR              reduce using rule 60 (L -> LPAREN D RPAREN .)
    AND             reduce using rule 60 (L -> LPAREN D RPAREN .)
    RPAREN          reduce using rule 60 (L -> LPAREN D RPAREN .)
    IF              reduce using rule 60 (L -> LPAREN D RPAREN .)
    WHILE           reduce using rule 60 (L -> LPAREN D RPAREN .)
    DWHILE          reduce using rule 60 (L -> LPAREN D RPAREN .)
    FOR             reduce using rule 60 (L -> LPAREN D RPAREN .)
    LCOR            reduce using rule 60 (L -> LPAREN D RPAREN .)
    BEGIN           reduce using rule 60 (L -> LPAREN D RPAREN .)
    INT             reduce using rule 60 (L -> LPAREN D RPAREN .)
    FL              reduce using rule 60 (L -> LPAREN D RPAREN .)
    BOOL            reduce using rule 60 (L -> LPAREN D RPAREN .)
    END             reduce using rule 60 (L -> LPAREN D RPAREN .)
    ID              reduce using rule 60 (L -> LPAREN D RPAREN .)
    READ            reduce using rule 60 (L -> LPAREN D RPAREN .)
    PRINT           reduce using rule 60 (L -> LPAREN D RPAREN .)
    PIPE            reduce using rule 60 (L -> LPAREN D RPAREN .)


state 85

    (62) D -> L D1 .

    RPAREN          reduce using rule 62 (D -> L D1 .)


state 86

    (63) D1 -> OR . L
    (59) L -> . ID OPRL ID
    (60) L -> . LPAREN D RPAREN

    ID              shift and go to state 50
    LPAREN          shift and go to state 51

    L                              shift and go to state 98

state 87

    (64) D1 -> AND . L
    (59) L -> . ID OPRL ID
    (60) L -> . LPAREN D RPAREN

    ID              shift and go to state 50
    LPAREN          shift and go to state 51

    L                              shift and go to state 99

state 88

    (29) ESTATUTO -> WHILE WHILE1 L WHILE2 . ESTATUTO WHILE3 END
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    END             reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 100
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 89

    (30) ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL . ESTATUTO END
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    END             reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 101
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 90

    (43) DW1 -> SEMICOLON ESTATUTO . DW1
    (43) DW1 -> . SEMICOLON ESTATUTO DW1
    (44) DW1 -> .

    SEMICOLON       shift and go to state 72
    UNTIL           reduce using rule 44 (DW1 -> .)

    DW1                            shift and go to state 102

state 91

    (31) ESTATUTO -> FOR LPAREN vars PIPE . L PIPE vars RPAREN ESTATUTO END
    (59) L -> . ID OPRL ID
    (60) L -> . LPAREN D RPAREN

    ID              shift and go to state 50
    LPAREN          shift and go to state 51

    L                              shift and go to state 103

state 92

    (19) MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars . BLOQUE END MODULO MOD2
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .

    BEGIN           shift and go to state 23
    END             reduce using rule 24 (BLOQUE -> .)

    BLOQUE                         shift and go to state 104

state 93

    (51) E -> E PLUS T .
    (54) T -> T . TIMES F
    (55) T -> T . DIVIDE F

    RPAREN          reduce using rule 51 (E -> E PLUS T .)
    PLUS            reduce using rule 51 (E -> E PLUS T .)
    MINUS           reduce using rule 51 (E -> E PLUS T .)
    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 80


state 94

    (52) E -> E MINUS T .
    (54) T -> T . TIMES F
    (55) T -> T . DIVIDE F

    RPAREN          reduce using rule 52 (E -> E MINUS T .)
    PLUS            reduce using rule 52 (E -> E MINUS T .)
    MINUS           reduce using rule 52 (E -> E MINUS T .)
    TIMES           shift and go to state 79
    DIVIDE          shift and go to state 80


state 95

    (54) T -> T TIMES F .

    TIMES           reduce using rule 54 (T -> T TIMES F .)
    DIVIDE          reduce using rule 54 (T -> T TIMES F .)
    RPAREN          reduce using rule 54 (T -> T TIMES F .)
    PLUS            reduce using rule 54 (T -> T TIMES F .)
    MINUS           reduce using rule 54 (T -> T TIMES F .)


state 96

    (55) T -> T DIVIDE F .

    TIMES           reduce using rule 55 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 55 (T -> T DIVIDE F .)
    RPAREN          reduce using rule 55 (T -> T DIVIDE F .)
    PLUS            reduce using rule 55 (T -> T DIVIDE F .)
    MINUS           reduce using rule 55 (T -> T DIVIDE F .)


state 97

    (28) ESTATUTO -> IF L THEN THEN1 ESTATUTO . IF1 FINIF
    (36) IF1 -> . ELSE ELSE1 ESTATUTO
    (37) IF1 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 106
    SEMICOLON       reduce using rule 37 (IF1 -> .)
    END             reduce using rule 37 (IF1 -> .)
    UNTIL           reduce using rule 37 (IF1 -> .)

  ! ELSE            [ reduce using rule 37 (IF1 -> .) ]

    IF1                            shift and go to state 105

state 98

    (63) D1 -> OR L .

    RPAREN          reduce using rule 63 (D1 -> OR L .)


state 99

    (64) D1 -> AND L .

    RPAREN          reduce using rule 64 (D1 -> AND L .)


state 100

    (29) ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO . WHILE3 END
    (42) WHILE3 -> .

    END             reduce using rule 42 (WHILE3 -> .)

    WHILE3                         shift and go to state 107

state 101

    (30) ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO . END

    END             shift and go to state 108


state 102

    (43) DW1 -> SEMICOLON ESTATUTO DW1 .

    UNTIL           reduce using rule 43 (DW1 -> SEMICOLON ESTATUTO DW1 .)


state 103

    (31) ESTATUTO -> FOR LPAREN vars PIPE L . PIPE vars RPAREN ESTATUTO END

    PIPE            shift and go to state 109


state 104

    (19) MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE . END MODULO MOD2

    END             shift and go to state 110


state 105

    (28) ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 . FINIF
    (39) FINIF -> .

    SEMICOLON       reduce using rule 39 (FINIF -> .)
    END             reduce using rule 39 (FINIF -> .)
    UNTIL           reduce using rule 39 (FINIF -> .)
    ELSE            reduce using rule 39 (FINIF -> .)

    FINIF                          shift and go to state 111

state 106

    (36) IF1 -> ELSE . ELSE1 ESTATUTO
    (38) ELSE1 -> .

    IF              reduce using rule 38 (ELSE1 -> .)
    WHILE           reduce using rule 38 (ELSE1 -> .)
    DWHILE          reduce using rule 38 (ELSE1 -> .)
    FOR             reduce using rule 38 (ELSE1 -> .)
    LCOR            reduce using rule 38 (ELSE1 -> .)
    BEGIN           reduce using rule 38 (ELSE1 -> .)
    INT             reduce using rule 38 (ELSE1 -> .)
    FL              reduce using rule 38 (ELSE1 -> .)
    BOOL            reduce using rule 38 (ELSE1 -> .)
    ID              reduce using rule 38 (ELSE1 -> .)
    READ            reduce using rule 38 (ELSE1 -> .)
    PRINT           reduce using rule 38 (ELSE1 -> .)
    ELSE            reduce using rule 38 (ELSE1 -> .)
    SEMICOLON       reduce using rule 38 (ELSE1 -> .)
    END             reduce using rule 38 (ELSE1 -> .)
    UNTIL           reduce using rule 38 (ELSE1 -> .)

    ELSE1                          shift and go to state 112

state 107

    (29) ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 . END

    END             shift and go to state 113


state 108

    (30) ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .

    SEMICOLON       reduce using rule 30 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)
    END             reduce using rule 30 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)
    UNTIL           reduce using rule 30 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)
    ELSE            reduce using rule 30 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)


state 109

    (31) ESTATUTO -> FOR LPAREN vars PIPE L PIPE . vars RPAREN ESTATUTO END
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for RPAREN resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    RPAREN          reduce using rule 9 (vars -> .)
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! RPAREN          [ reduce using rule 11 (dec1 -> .) ]

    vars                           shift and go to state 114
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 110

    (19) MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END . MODULO MOD2
    (19) MODULO -> . FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2
    (20) MODULO -> .

    FUNCTION        shift and go to state 15
    BEGIN           reduce using rule 20 (MODULO -> .)
    $end            reduce using rule 20 (MODULO -> .)

    MODULO                         shift and go to state 115

state 111

    (28) ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 FINIF .

    SEMICOLON       reduce using rule 28 (ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 FINIF .)
    END             reduce using rule 28 (ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 FINIF .)
    UNTIL           reduce using rule 28 (ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 FINIF .)
    ELSE            reduce using rule 28 (ESTATUTO -> IF L THEN THEN1 ESTATUTO IF1 FINIF .)


state 112

    (36) IF1 -> ELSE ELSE1 . ESTATUTO
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    ELSE            reduce using rule 9 (vars -> .)
    SEMICOLON       reduce using rule 9 (vars -> .)
    END             reduce using rule 9 (vars -> .)
    UNTIL           reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! ELSE            [ reduce using rule 34 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 34 (ESTATUTO -> .) ]
  ! ELSE            [ reduce using rule 24 (BLOQUE -> .) ]
  ! SEMICOLON       [ reduce using rule 24 (BLOQUE -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! UNTIL           [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! ELSE            [ reduce using rule 11 (dec1 -> .) ]
  ! SEMICOLON       [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]
  ! UNTIL           [ reduce using rule 11 (dec1 -> .) ]

    ESTATUTO                       shift and go to state 116
    vars                           shift and go to state 32
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 113

    (29) ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END .

    SEMICOLON       reduce using rule 29 (ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END .)
    END             reduce using rule 29 (ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END .)
    UNTIL           reduce using rule 29 (ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END .)
    ELSE            reduce using rule 29 (ESTATUTO -> WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END .)


state 114

    (31) ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars . RPAREN ESTATUTO END

    RPAREN          shift and go to state 117


state 115

    (19) MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO . MOD2
    (22) MOD2 -> .

    BEGIN           reduce using rule 22 (MOD2 -> .)
    $end            reduce using rule 22 (MOD2 -> .)

    MOD2                           shift and go to state 118

state 116

    (36) IF1 -> ELSE ELSE1 ESTATUTO .

    ELSE            reduce using rule 36 (IF1 -> ELSE ELSE1 ESTATUTO .)
    SEMICOLON       reduce using rule 36 (IF1 -> ELSE ELSE1 ESTATUTO .)
    END             reduce using rule 36 (IF1 -> ELSE ELSE1 ESTATUTO .)
    UNTIL           reduce using rule 36 (IF1 -> ELSE ELSE1 ESTATUTO .)


state 117

    (31) ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN . ESTATUTO END
    (27) ESTATUTO -> . vars
    (28) ESTATUTO -> . IF L THEN THEN1 ESTATUTO IF1 FINIF
    (29) ESTATUTO -> . WHILE WHILE1 L WHILE2 ESTATUTO WHILE3 END
    (30) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (31) ESTATUTO -> . FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END
    (32) ESTATUTO -> . BLOQUE
    (33) ESTATUTO -> . LCOR ID RCOR
    (34) ESTATUTO -> .
    (8) vars -> . dec1 vars0 vars
    (9) vars -> .
    (23) BLOQUE -> . BEGIN ESTATUTO BR END
    (24) BLOQUE -> .
    (10) dec1 -> . TIPO COLON
    (11) dec1 -> .
    (12) TIPO -> . INT
    (13) TIPO -> . FL
    (14) TIPO -> . BOOL

  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! reduce/reduce conflict for END resolved using rule 9 (vars -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FL resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IF              shift and go to state 33
    WHILE           shift and go to state 34
    DWHILE          shift and go to state 35
    FOR             shift and go to state 36
    LCOR            shift and go to state 38
    END             reduce using rule 9 (vars -> .)
    BEGIN           shift and go to state 23
    ID              reduce using rule 11 (dec1 -> .)
    READ            reduce using rule 11 (dec1 -> .)
    PRINT           reduce using rule 11 (dec1 -> .)
    INT             shift and go to state 11
    FL              shift and go to state 12
    BOOL            shift and go to state 13

  ! END             [ reduce using rule 34 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 24 (BLOQUE -> .) ]
  ! INT             [ reduce using rule 11 (dec1 -> .) ]
  ! FL              [ reduce using rule 11 (dec1 -> .) ]
  ! BOOL            [ reduce using rule 11 (dec1 -> .) ]
  ! END             [ reduce using rule 11 (dec1 -> .) ]

    vars                           shift and go to state 32
    ESTATUTO                       shift and go to state 119
    BLOQUE                         shift and go to state 37
    dec1                           shift and go to state 9
    TIPO                           shift and go to state 10

state 118

    (19) MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2 .

    BEGIN           reduce using rule 19 (MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2 .)
    $end            reduce using rule 19 (MODULO -> FUNCTION ID MOD1 LPAREN RPAREN vars BLOQUE END MODULO MOD2 .)


state 119

    (31) ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO . END

    END             shift and go to state 120


state 120

    (31) ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END .

    SEMICOLON       reduce using rule 31 (ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END .)
    END             reduce using rule 31 (ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END .)
    UNTIL           reduce using rule 31 (ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END .)
    ELSE            reduce using rule 31 (ESTATUTO -> FOR LPAREN vars PIPE L PIPE vars RPAREN ESTATUTO END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 7 resolved as shift
WARNING: shift/reduce conflict for FL in state 7 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for READ in state 9 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 9 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 14 resolved as shift
WARNING: shift/reduce conflict for INT in state 16 resolved as shift
WARNING: shift/reduce conflict for FL in state 16 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 16 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 22 resolved as shift
WARNING: shift/reduce conflict for INT in state 23 resolved as shift
WARNING: shift/reduce conflict for FL in state 23 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 23 resolved as shift
WARNING: shift/reduce conflict for INT in state 35 resolved as shift
WARNING: shift/reduce conflict for FL in state 35 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 35 resolved as shift
WARNING: shift/reduce conflict for INT in state 48 resolved as shift
WARNING: shift/reduce conflict for FL in state 48 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 48 resolved as shift
WARNING: shift/reduce conflict for INT in state 54 resolved as shift
WARNING: shift/reduce conflict for FL in state 54 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 54 resolved as shift
WARNING: shift/reduce conflict for INT in state 72 resolved as shift
WARNING: shift/reduce conflict for FL in state 72 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for INT in state 75 resolved as shift
WARNING: shift/reduce conflict for FL in state 75 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 75 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for FL in state 82 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 88 resolved as shift
WARNING: shift/reduce conflict for FL in state 88 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 88 resolved as shift
WARNING: shift/reduce conflict for INT in state 89 resolved as shift
WARNING: shift/reduce conflict for FL in state 89 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 89 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 97 resolved as shift
WARNING: shift/reduce conflict for INT in state 109 resolved as shift
WARNING: shift/reduce conflict for FL in state 109 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 109 resolved as shift
WARNING: shift/reduce conflict for INT in state 112 resolved as shift
WARNING: shift/reduce conflict for FL in state 112 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 112 resolved as shift
WARNING: shift/reduce conflict for INT in state 117 resolved as shift
WARNING: shift/reduce conflict for FL in state 117 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 117 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 7
WARNING: reduce/reduce conflict in state 16 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 16
WARNING: reduce/reduce conflict in state 22 resolved using rule (main1 -> BLOQUE)
WARNING: rejected rule (BLOQUE -> <empty>) in state 22
WARNING: reduce/reduce conflict in state 23 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 23 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 35 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 35
WARNING: reduce/reduce conflict in state 48 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 48
WARNING: reduce/reduce conflict in state 48 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 48
WARNING: reduce/reduce conflict in state 48 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 48
WARNING: reduce/reduce conflict in state 54 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 54
WARNING: reduce/reduce conflict in state 69 resolved using rule (D -> L)
WARNING: rejected rule (D1 -> <empty>) in state 69
WARNING: reduce/reduce conflict in state 72 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 72 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 72 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 75 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 75
WARNING: reduce/reduce conflict in state 82 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 82
WARNING: reduce/reduce conflict in state 88 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 88
WARNING: reduce/reduce conflict in state 88 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 88
WARNING: reduce/reduce conflict in state 88 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 88
WARNING: reduce/reduce conflict in state 89 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 89
WARNING: reduce/reduce conflict in state 89 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 89
WARNING: reduce/reduce conflict in state 89 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 89
WARNING: reduce/reduce conflict in state 109 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 109
WARNING: reduce/reduce conflict in state 112 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 112 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 117 resolved using rule (vars -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (vars -> <empty>)
WARNING: rejected rule (BLOQUE -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (vars -> <empty>)
WARNING: rejected rule (dec1 -> <empty>) in state 117
WARNING: Rule (ESTATUTO -> <empty>) is never reduced
WARNING: Rule (D1 -> <empty>) is never reduced
