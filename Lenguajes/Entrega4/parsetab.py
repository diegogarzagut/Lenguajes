
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BEGIN CHAR COLON COMA CTE_FL CTE_INT DIVIDE DWHILE ELSE END EQUAL FL FOR FUNCTION ID IF INT LPAREN MAIN MINUS NUMBER PLUS RPAREN SEMICOLON THEN TIMES UNTIL WHILE\n\tS : main\n\t\n\tmain : MAIN LPAREN RPAREN vars MODULO BLOQUE\n\t\n\tvars  : dec1 ID EQUAL vars1 SEMICOLON vars\n\t      | \n\t\n\tdec1  : TIPO COLON \n\t      | \n\t\n\tvars1 : F\n\t\t  | COMA ID EQUAL vars1\n\t\n\tMODULO : FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO\n\t       | \n\t\n\tBLOQUE : BEGIN ESTATUTO BR END\n\t\t   | \n\t\n\tBR :     SEMICOLON ESTATUTO BR\n\t        | \n\t\n\tESTATUTO : IF LPAREN F RPAREN THEN ESTATUTO IF1\n\t\t\t | WHILE LPAREN F RPAREN ESTATUTO END\n\t\t\t | DWHILE ESTATUTO DW1 UNTIL ESTATUTO END\n\t\t\t | FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END\n\t\t \t | BLOQUE\n\t\t\t | \n\t\n\tIF1 : ELSE ESTATUTO IF1\n\t\t| \n\t\n\tDW1 : SEMICOLON ESTATUTO DW1\n\t    | \n\t\n\tX : MAIN\n\t  | BEGIN\n\t  | END\n\t\n\tF : IDCTE\n\t  | LPAREN E RPAREN\n\t\n\tE : T\n\t  | T PLUS E\n\t  | T MINUS E\n\t\n\tT : F \n\t  | F TIMES T\n\t  | F DIVIDE T\n\t\n\tIDCTE : ID\n\t\t  | CTE_INT\n\t\t  | CTE_FL\n\t\n\tTIPO : INT\n\t\t | FL\n\t\t | CHAR\n\t'
    
_lr_action_items = {'MAIN':([0,],[3,]),'$end':([1,2,5,6,12,16,42,47,55,79,84,],[0,-1,-4,-10,-12,-2,-4,-11,-3,-10,-9,]),'LPAREN':([3,18,19,21,22,24,32,37,38,56,58,59,60,61,67,],[4,26,32,37,38,40,32,32,32,32,32,32,32,32,32,]),'RPAREN':([4,26,27,31,33,34,42,44,45,46,49,50,55,57,70,71,72,73,83,87,],[5,41,-36,-28,-37,-38,-4,57,-30,-33,63,64,-3,-29,-31,-32,-34,-35,-4,89,]),'FUNCTION':([5,6,42,55,79,],[-4,13,-4,-3,13,]),'BEGIN':([5,6,12,17,23,36,41,42,52,54,55,64,65,74,79,84,86,89,],[-4,-10,17,17,17,17,-4,-4,17,17,-3,17,17,17,-10,-9,17,17,]),'ID':([5,7,13,15,19,30,32,37,38,40,41,42,56,58,59,60,61,67,83,],[-6,14,18,-5,27,43,27,27,27,-6,-6,-6,27,27,27,27,27,27,-6,]),'INT':([5,40,41,42,83,],[9,9,9,9,9,]),'FL':([5,40,41,42,83,],[10,10,10,10,10,]),'CHAR':([5,40,41,42,83,],[11,11,11,11,11,]),'COLON':([8,9,10,11,],[15,-39,-40,-41,]),'EQUAL':([14,43,],[19,56,]),'IF':([17,23,36,52,64,65,74,86,89,],[21,21,21,21,21,21,21,21,21,]),'WHILE':([17,23,36,52,64,65,74,86,89,],[22,22,22,22,22,22,22,22,22,]),'DWHILE':([17,23,36,52,64,65,74,86,89,],[23,23,23,23,23,23,23,23,23,]),'FOR':([17,23,36,52,64,65,74,86,89,],[24,24,24,24,24,24,24,24,24,]),'SEMICOLON':([17,20,23,25,27,28,29,31,33,34,36,39,47,48,52,57,66,69,74,80,81,82,85,86,88,90,92,],[-12,36,-12,-19,-36,42,-7,-28,-37,-38,-12,52,-11,36,-12,-29,52,-8,-12,-22,-16,-17,-15,-12,-22,-21,-18,]),'END':([17,20,25,35,36,41,42,47,48,54,55,62,64,65,68,74,75,76,80,81,82,85,86,88,89,90,91,92,],[-12,-14,-19,47,-12,-4,-4,-11,-14,-12,-3,-13,-12,-12,79,-12,81,82,-22,-16,-17,-15,-12,-22,-12,-21,92,-18,]),'COMA':([19,27,31,33,34,40,42,53,55,56,57,78,],[30,-36,-28,-37,-38,-4,-4,67,-3,30,-29,83,]),'CTE_INT':([19,32,37,38,56,58,59,60,61,67,],[33,33,33,33,33,33,33,33,33,33,]),'CTE_FL':([19,32,37,38,56,58,59,60,61,67,],[34,34,34,34,34,34,34,34,34,34,]),'UNTIL':([23,25,39,47,51,52,66,74,77,80,81,82,85,86,88,90,92,],[-12,-19,-24,-11,65,-12,-24,-12,-23,-22,-16,-17,-15,-12,-22,-21,-18,]),'ELSE':([25,47,74,80,81,82,85,86,88,90,92,],[-19,-11,-12,86,-16,-17,-15,-12,86,-21,-18,]),'TIMES':([27,31,33,34,46,57,],[-36,-28,-37,-38,60,-29,]),'DIVIDE':([27,31,33,34,46,57,],[-36,-28,-37,-38,61,-29,]),'PLUS':([27,31,33,34,45,46,57,72,73,],[-36,-28,-37,-38,58,-33,-29,-34,-35,]),'MINUS':([27,31,33,34,45,46,57,72,73,],[-36,-28,-37,-38,59,-33,-29,-34,-35,]),'THEN':([63,],[74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'main':([0,],[2,]),'vars':([5,40,41,42,83,],[6,53,54,55,87,]),'dec1':([5,40,41,42,83,],[7,7,7,7,7,]),'TIPO':([5,40,41,42,83,],[8,8,8,8,8,]),'MODULO':([6,79,],[12,84,]),'BLOQUE':([12,17,23,36,52,54,64,65,74,86,89,],[16,25,25,25,25,68,25,25,25,25,25,]),'ESTATUTO':([17,23,36,52,64,65,74,86,89,],[20,39,48,66,75,76,80,88,91,]),'vars1':([19,56,],[28,69,]),'F':([19,32,37,38,56,58,59,60,61,67,],[29,46,49,50,29,46,46,46,46,78,]),'IDCTE':([19,32,37,38,56,58,59,60,61,67,],[31,31,31,31,31,31,31,31,31,31,]),'BR':([20,48,],[35,62,]),'E':([32,58,59,],[44,70,71,]),'T':([32,58,59,60,61,],[45,45,45,72,73,]),'DW1':([39,66,],[51,77,]),'IF1':([80,88,],[85,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> main','S',1,'p_S','Sunbeam.py',123),
  ('main -> MAIN LPAREN RPAREN vars MODULO BLOQUE','main',6,'p_main','Sunbeam.py',129),
  ('vars -> dec1 ID EQUAL vars1 SEMICOLON vars','vars',6,'p_vars','Sunbeam.py',134),
  ('vars -> <empty>','vars',0,'p_vars','Sunbeam.py',135),
  ('dec1 -> TIPO COLON','dec1',2,'p_dec1','Sunbeam.py',139),
  ('dec1 -> <empty>','dec1',0,'p_dec1','Sunbeam.py',140),
  ('vars1 -> F','vars1',1,'p_vars1','Sunbeam.py',145),
  ('vars1 -> COMA ID EQUAL vars1','vars1',4,'p_vars1','Sunbeam.py',146),
  ('MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO','MODULO',8,'p_MODULO','Sunbeam.py',151),
  ('MODULO -> <empty>','MODULO',0,'p_MODULO','Sunbeam.py',152),
  ('BLOQUE -> BEGIN ESTATUTO BR END','BLOQUE',4,'p_BLOQUE','Sunbeam.py',157),
  ('BLOQUE -> <empty>','BLOQUE',0,'p_BLOQUE','Sunbeam.py',158),
  ('BR -> SEMICOLON ESTATUTO BR','BR',3,'p_BR','Sunbeam.py',162),
  ('BR -> <empty>','BR',0,'p_BR','Sunbeam.py',163),
  ('ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1','ESTATUTO',7,'p_ESTATUTO','Sunbeam.py',168),
  ('ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END','ESTATUTO',6,'p_ESTATUTO','Sunbeam.py',169),
  ('ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END','ESTATUTO',6,'p_ESTATUTO','Sunbeam.py',170),
  ('ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END','ESTATUTO',10,'p_ESTATUTO','Sunbeam.py',171),
  ('ESTATUTO -> BLOQUE','ESTATUTO',1,'p_ESTATUTO','Sunbeam.py',172),
  ('ESTATUTO -> <empty>','ESTATUTO',0,'p_ESTATUTO','Sunbeam.py',173),
  ('IF1 -> ELSE ESTATUTO IF1','IF1',3,'p_IF1','Sunbeam.py',177),
  ('IF1 -> <empty>','IF1',0,'p_IF1','Sunbeam.py',178),
  ('DW1 -> SEMICOLON ESTATUTO DW1','DW1',3,'p_DW1','Sunbeam.py',182),
  ('DW1 -> <empty>','DW1',0,'p_DW1','Sunbeam.py',183),
  ('X -> MAIN','X',1,'p_X','Sunbeam.py',187),
  ('X -> BEGIN','X',1,'p_X','Sunbeam.py',188),
  ('X -> END','X',1,'p_X','Sunbeam.py',189),
  ('F -> IDCTE','F',1,'p_F','Sunbeam.py',194),
  ('F -> LPAREN E RPAREN','F',3,'p_F','Sunbeam.py',195),
  ('E -> T','E',1,'p_E','Sunbeam.py',200),
  ('E -> T PLUS E','E',3,'p_E','Sunbeam.py',201),
  ('E -> T MINUS E','E',3,'p_E','Sunbeam.py',202),
  ('T -> F','T',1,'p_T','Sunbeam.py',206),
  ('T -> F TIMES T','T',3,'p_T','Sunbeam.py',207),
  ('T -> F DIVIDE T','T',3,'p_T','Sunbeam.py',208),
  ('IDCTE -> ID','IDCTE',1,'p_IDCTE','Sunbeam.py',213),
  ('IDCTE -> CTE_INT','IDCTE',1,'p_IDCTE','Sunbeam.py',214),
  ('IDCTE -> CTE_FL','IDCTE',1,'p_IDCTE','Sunbeam.py',215),
  ('TIPO -> INT','TIPO',1,'p_TIPO','Sunbeam.py',220),
  ('TIPO -> FL','TIPO',1,'p_TIPO','Sunbeam.py',221),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','Sunbeam.py',222),
]
