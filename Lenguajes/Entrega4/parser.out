Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER

Grammar

Rule 0     S' -> S
Rule 1     S -> main
Rule 2     main -> MAIN LPAREN RPAREN vars MODULO BLOQUE
Rule 3     vars -> dec1 ID EQUAL vars1 SEMICOLON vars
Rule 4     vars -> <empty>
Rule 5     dec1 -> TIPO COLON
Rule 6     dec1 -> <empty>
Rule 7     vars1 -> F
Rule 8     vars1 -> COMA ID EQUAL vars1
Rule 9     MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO
Rule 10    MODULO -> <empty>
Rule 11    BLOQUE -> BEGIN ESTATUTO BR END
Rule 12    BLOQUE -> <empty>
Rule 13    BR -> SEMICOLON ESTATUTO BR
Rule 14    BR -> <empty>
Rule 15    ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1
Rule 16    ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END
Rule 17    ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
Rule 18    ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
Rule 19    ESTATUTO -> BLOQUE
Rule 20    ESTATUTO -> <empty>
Rule 21    IF1 -> ELSE ESTATUTO IF1
Rule 22    IF1 -> <empty>
Rule 23    DW1 -> SEMICOLON ESTATUTO DW1
Rule 24    DW1 -> <empty>
Rule 25    X -> MAIN
Rule 26    X -> BEGIN
Rule 27    X -> END
Rule 28    F -> IDCTE
Rule 29    F -> LPAREN E RPAREN
Rule 30    E -> T
Rule 31    E -> T PLUS E
Rule 32    E -> T MINUS E
Rule 33    T -> F
Rule 34    T -> F TIMES T
Rule 35    T -> F DIVIDE T
Rule 36    IDCTE -> ID
Rule 37    IDCTE -> CTE_INT
Rule 38    IDCTE -> CTE_FL
Rule 39    TIPO -> INT
Rule 40    TIPO -> FL
Rule 41    TIPO -> CHAR

Terminals, with rules where they appear

BEGIN                : 11 26
CHAR                 : 41
COLON                : 5
COMA                 : 8 18 18
CTE_FL               : 38
CTE_INT              : 37
DIVIDE               : 35
DWHILE               : 17
ELSE                 : 21
END                  : 9 11 16 17 18 27
EQUAL                : 3 8
FL                   : 40
FOR                  : 18
FUNCTION             : 9
ID                   : 3 8 9 36
IF                   : 15
INT                  : 39
LPAREN               : 2 9 15 16 18 29
MAIN                 : 2 25
MINUS                : 32
NUMBER               : 
PLUS                 : 31
RPAREN               : 2 9 15 16 18 29
SEMICOLON            : 3 13 23
THEN                 : 15
TIMES                : 34
UNTIL                : 17
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

BLOQUE               : 2 9 19
BR                   : 11 13
DW1                  : 17 23
E                    : 29 31 32
ESTATUTO             : 11 13 15 16 17 17 18 21 23
F                    : 7 15 16 18 33 34 35
IDCTE                : 28
IF1                  : 15 21
MODULO               : 2 9
S                    : 0
T                    : 30 31 32 34 35
TIPO                 : 5
X                    : 
dec1                 : 3
main                 : 1
vars                 : 2 3 9 18 18
vars1                : 3 8

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . main
    (2) main -> . MAIN LPAREN RPAREN vars MODULO BLOQUE

    MAIN            shift and go to state 3

    S                              shift and go to state 1
    main                           shift and go to state 2

state 1

    (0) S' -> S .



state 2

    (1) S -> main .

    $end            reduce using rule 1 (S -> main .)


state 3

    (2) main -> MAIN . LPAREN RPAREN vars MODULO BLOQUE

    LPAREN          shift and go to state 4


state 4

    (2) main -> MAIN LPAREN . RPAREN vars MODULO BLOQUE

    RPAREN          shift and go to state 5


state 5

    (2) main -> MAIN LPAREN RPAREN . vars MODULO BLOQUE
    (3) vars -> . dec1 ID EQUAL vars1 SEMICOLON vars
    (4) vars -> .
    (5) dec1 -> . TIPO COLON
    (6) dec1 -> .
    (39) TIPO -> . INT
    (40) TIPO -> . FL
    (41) TIPO -> . CHAR

    FUNCTION        reduce using rule 4 (vars -> .)
    BEGIN           reduce using rule 4 (vars -> .)
    $end            reduce using rule 4 (vars -> .)
    ID              reduce using rule 6 (dec1 -> .)
    INT             shift and go to state 9
    FL              shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    dec1                           shift and go to state 7
    TIPO                           shift and go to state 8

state 6

    (2) main -> MAIN LPAREN RPAREN vars . MODULO BLOQUE
    (9) MODULO -> . FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO
    (10) MODULO -> .

    FUNCTION        shift and go to state 13
    BEGIN           reduce using rule 10 (MODULO -> .)
    $end            reduce using rule 10 (MODULO -> .)

    MODULO                         shift and go to state 12

state 7

    (3) vars -> dec1 . ID EQUAL vars1 SEMICOLON vars

    ID              shift and go to state 14


state 8

    (5) dec1 -> TIPO . COLON

    COLON           shift and go to state 15


state 9

    (39) TIPO -> INT .

    COLON           reduce using rule 39 (TIPO -> INT .)


state 10

    (40) TIPO -> FL .

    COLON           reduce using rule 40 (TIPO -> FL .)


state 11

    (41) TIPO -> CHAR .

    COLON           reduce using rule 41 (TIPO -> CHAR .)


state 12

    (2) main -> MAIN LPAREN RPAREN vars MODULO . BLOQUE
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

    BEGIN           shift and go to state 17
    $end            reduce using rule 12 (BLOQUE -> .)

    BLOQUE                         shift and go to state 16

state 13

    (9) MODULO -> FUNCTION . ID LPAREN RPAREN vars BLOQUE END MODULO

    ID              shift and go to state 18


state 14

    (3) vars -> dec1 ID . EQUAL vars1 SEMICOLON vars

    EQUAL           shift and go to state 19


state 15

    (5) dec1 -> TIPO COLON .

    ID              reduce using rule 5 (dec1 -> TIPO COLON .)


state 16

    (2) main -> MAIN LPAREN RPAREN vars MODULO BLOQUE .

    $end            reduce using rule 2 (main -> MAIN LPAREN RPAREN vars MODULO BLOQUE .)


state 17

    (11) BLOQUE -> BEGIN . ESTATUTO BR END
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    SEMICOLON       reduce using rule 12 (BLOQUE -> .)
    END             reduce using rule 12 (BLOQUE -> .)

  ! SEMICOLON       [ reduce using rule 20 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 20
    BLOQUE                         shift and go to state 25

state 18

    (9) MODULO -> FUNCTION ID . LPAREN RPAREN vars BLOQUE END MODULO

    LPAREN          shift and go to state 26


state 19

    (3) vars -> dec1 ID EQUAL . vars1 SEMICOLON vars
    (7) vars1 -> . F
    (8) vars1 -> . COMA ID EQUAL vars1
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    COMA            shift and go to state 30
    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    vars1                          shift and go to state 28
    F                              shift and go to state 29
    IDCTE                          shift and go to state 31

state 20

    (11) BLOQUE -> BEGIN ESTATUTO . BR END
    (13) BR -> . SEMICOLON ESTATUTO BR
    (14) BR -> .

    SEMICOLON       shift and go to state 36
    END             reduce using rule 14 (BR -> .)

    BR                             shift and go to state 35

state 21

    (15) ESTATUTO -> IF . LPAREN F RPAREN THEN ESTATUTO IF1

    LPAREN          shift and go to state 37


state 22

    (16) ESTATUTO -> WHILE . LPAREN F RPAREN ESTATUTO END

    LPAREN          shift and go to state 38


state 23

    (17) ESTATUTO -> DWHILE . ESTATUTO DW1 UNTIL ESTATUTO END
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    SEMICOLON       reduce using rule 12 (BLOQUE -> .)
    UNTIL           reduce using rule 12 (BLOQUE -> .)

  ! SEMICOLON       [ reduce using rule 20 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 39
    BLOQUE                         shift and go to state 25

state 24

    (18) ESTATUTO -> FOR . LPAREN vars COMA F COMA vars RPAREN ESTATUTO END

    LPAREN          shift and go to state 40


state 25

    (19) ESTATUTO -> BLOQUE .

    SEMICOLON       reduce using rule 19 (ESTATUTO -> BLOQUE .)
    END             reduce using rule 19 (ESTATUTO -> BLOQUE .)
    UNTIL           reduce using rule 19 (ESTATUTO -> BLOQUE .)
    ELSE            reduce using rule 19 (ESTATUTO -> BLOQUE .)


state 26

    (9) MODULO -> FUNCTION ID LPAREN . RPAREN vars BLOQUE END MODULO

    RPAREN          shift and go to state 41


state 27

    (36) IDCTE -> ID .

    SEMICOLON       reduce using rule 36 (IDCTE -> ID .)
    TIMES           reduce using rule 36 (IDCTE -> ID .)
    DIVIDE          reduce using rule 36 (IDCTE -> ID .)
    PLUS            reduce using rule 36 (IDCTE -> ID .)
    MINUS           reduce using rule 36 (IDCTE -> ID .)
    RPAREN          reduce using rule 36 (IDCTE -> ID .)
    COMA            reduce using rule 36 (IDCTE -> ID .)


state 28

    (3) vars -> dec1 ID EQUAL vars1 . SEMICOLON vars

    SEMICOLON       shift and go to state 42


state 29

    (7) vars1 -> F .

    SEMICOLON       reduce using rule 7 (vars1 -> F .)


state 30

    (8) vars1 -> COMA . ID EQUAL vars1

    ID              shift and go to state 43


state 31

    (28) F -> IDCTE .

    SEMICOLON       reduce using rule 28 (F -> IDCTE .)
    TIMES           reduce using rule 28 (F -> IDCTE .)
    DIVIDE          reduce using rule 28 (F -> IDCTE .)
    PLUS            reduce using rule 28 (F -> IDCTE .)
    MINUS           reduce using rule 28 (F -> IDCTE .)
    RPAREN          reduce using rule 28 (F -> IDCTE .)
    COMA            reduce using rule 28 (F -> IDCTE .)


state 32

    (29) F -> LPAREN . E RPAREN
    (30) E -> . T
    (31) E -> . T PLUS E
    (32) E -> . T MINUS E
    (33) T -> . F
    (34) T -> . F TIMES T
    (35) T -> . F DIVIDE T
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    E                              shift and go to state 44
    T                              shift and go to state 45
    F                              shift and go to state 46
    IDCTE                          shift and go to state 31

state 33

    (37) IDCTE -> CTE_INT .

    SEMICOLON       reduce using rule 37 (IDCTE -> CTE_INT .)
    TIMES           reduce using rule 37 (IDCTE -> CTE_INT .)
    DIVIDE          reduce using rule 37 (IDCTE -> CTE_INT .)
    PLUS            reduce using rule 37 (IDCTE -> CTE_INT .)
    MINUS           reduce using rule 37 (IDCTE -> CTE_INT .)
    RPAREN          reduce using rule 37 (IDCTE -> CTE_INT .)
    COMA            reduce using rule 37 (IDCTE -> CTE_INT .)


state 34

    (38) IDCTE -> CTE_FL .

    SEMICOLON       reduce using rule 38 (IDCTE -> CTE_FL .)
    TIMES           reduce using rule 38 (IDCTE -> CTE_FL .)
    DIVIDE          reduce using rule 38 (IDCTE -> CTE_FL .)
    PLUS            reduce using rule 38 (IDCTE -> CTE_FL .)
    MINUS           reduce using rule 38 (IDCTE -> CTE_FL .)
    RPAREN          reduce using rule 38 (IDCTE -> CTE_FL .)
    COMA            reduce using rule 38 (IDCTE -> CTE_FL .)


state 35

    (11) BLOQUE -> BEGIN ESTATUTO BR . END

    END             shift and go to state 47


state 36

    (13) BR -> SEMICOLON . ESTATUTO BR
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    SEMICOLON       reduce using rule 12 (BLOQUE -> .)
    END             reduce using rule 12 (BLOQUE -> .)

  ! SEMICOLON       [ reduce using rule 20 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 48
    BLOQUE                         shift and go to state 25

state 37

    (15) ESTATUTO -> IF LPAREN . F RPAREN THEN ESTATUTO IF1
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    F                              shift and go to state 49
    IDCTE                          shift and go to state 31

state 38

    (16) ESTATUTO -> WHILE LPAREN . F RPAREN ESTATUTO END
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    F                              shift and go to state 50
    IDCTE                          shift and go to state 31

state 39

    (17) ESTATUTO -> DWHILE ESTATUTO . DW1 UNTIL ESTATUTO END
    (23) DW1 -> . SEMICOLON ESTATUTO DW1
    (24) DW1 -> .

    SEMICOLON       shift and go to state 52
    UNTIL           reduce using rule 24 (DW1 -> .)

    DW1                            shift and go to state 51

state 40

    (18) ESTATUTO -> FOR LPAREN . vars COMA F COMA vars RPAREN ESTATUTO END
    (3) vars -> . dec1 ID EQUAL vars1 SEMICOLON vars
    (4) vars -> .
    (5) dec1 -> . TIPO COLON
    (6) dec1 -> .
    (39) TIPO -> . INT
    (40) TIPO -> . FL
    (41) TIPO -> . CHAR

    COMA            reduce using rule 4 (vars -> .)
    ID              reduce using rule 6 (dec1 -> .)
    INT             shift and go to state 9
    FL              shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 53
    dec1                           shift and go to state 7
    TIPO                           shift and go to state 8

state 41

    (9) MODULO -> FUNCTION ID LPAREN RPAREN . vars BLOQUE END MODULO
    (3) vars -> . dec1 ID EQUAL vars1 SEMICOLON vars
    (4) vars -> .
    (5) dec1 -> . TIPO COLON
    (6) dec1 -> .
    (39) TIPO -> . INT
    (40) TIPO -> . FL
    (41) TIPO -> . CHAR

    BEGIN           reduce using rule 4 (vars -> .)
    END             reduce using rule 4 (vars -> .)
    ID              reduce using rule 6 (dec1 -> .)
    INT             shift and go to state 9
    FL              shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 54
    dec1                           shift and go to state 7
    TIPO                           shift and go to state 8

state 42

    (3) vars -> dec1 ID EQUAL vars1 SEMICOLON . vars
    (3) vars -> . dec1 ID EQUAL vars1 SEMICOLON vars
    (4) vars -> .
    (5) dec1 -> . TIPO COLON
    (6) dec1 -> .
    (39) TIPO -> . INT
    (40) TIPO -> . FL
    (41) TIPO -> . CHAR

    FUNCTION        reduce using rule 4 (vars -> .)
    BEGIN           reduce using rule 4 (vars -> .)
    $end            reduce using rule 4 (vars -> .)
    COMA            reduce using rule 4 (vars -> .)
    END             reduce using rule 4 (vars -> .)
    RPAREN          reduce using rule 4 (vars -> .)
    ID              reduce using rule 6 (dec1 -> .)
    INT             shift and go to state 9
    FL              shift and go to state 10
    CHAR            shift and go to state 11

    dec1                           shift and go to state 7
    vars                           shift and go to state 55
    TIPO                           shift and go to state 8

state 43

    (8) vars1 -> COMA ID . EQUAL vars1

    EQUAL           shift and go to state 56


state 44

    (29) F -> LPAREN E . RPAREN

    RPAREN          shift and go to state 57


state 45

    (30) E -> T .
    (31) E -> T . PLUS E
    (32) E -> T . MINUS E

    RPAREN          reduce using rule 30 (E -> T .)
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59


state 46

    (33) T -> F .
    (34) T -> F . TIMES T
    (35) T -> F . DIVIDE T

    PLUS            reduce using rule 33 (T -> F .)
    MINUS           reduce using rule 33 (T -> F .)
    RPAREN          reduce using rule 33 (T -> F .)
    TIMES           shift and go to state 60
    DIVIDE          shift and go to state 61


state 47

    (11) BLOQUE -> BEGIN ESTATUTO BR END .

    $end            reduce using rule 11 (BLOQUE -> BEGIN ESTATUTO BR END .)
    SEMICOLON       reduce using rule 11 (BLOQUE -> BEGIN ESTATUTO BR END .)
    END             reduce using rule 11 (BLOQUE -> BEGIN ESTATUTO BR END .)
    UNTIL           reduce using rule 11 (BLOQUE -> BEGIN ESTATUTO BR END .)
    ELSE            reduce using rule 11 (BLOQUE -> BEGIN ESTATUTO BR END .)


state 48

    (13) BR -> SEMICOLON ESTATUTO . BR
    (13) BR -> . SEMICOLON ESTATUTO BR
    (14) BR -> .

    SEMICOLON       shift and go to state 36
    END             reduce using rule 14 (BR -> .)

    BR                             shift and go to state 62

state 49

    (15) ESTATUTO -> IF LPAREN F . RPAREN THEN ESTATUTO IF1

    RPAREN          shift and go to state 63


state 50

    (16) ESTATUTO -> WHILE LPAREN F . RPAREN ESTATUTO END

    RPAREN          shift and go to state 64


state 51

    (17) ESTATUTO -> DWHILE ESTATUTO DW1 . UNTIL ESTATUTO END

    UNTIL           shift and go to state 65


state 52

    (23) DW1 -> SEMICOLON . ESTATUTO DW1
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    SEMICOLON       reduce using rule 12 (BLOQUE -> .)
    UNTIL           reduce using rule 12 (BLOQUE -> .)

  ! SEMICOLON       [ reduce using rule 20 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 66
    BLOQUE                         shift and go to state 25

state 53

    (18) ESTATUTO -> FOR LPAREN vars . COMA F COMA vars RPAREN ESTATUTO END

    COMA            shift and go to state 67


state 54

    (9) MODULO -> FUNCTION ID LPAREN RPAREN vars . BLOQUE END MODULO
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

    BEGIN           shift and go to state 17
    END             reduce using rule 12 (BLOQUE -> .)

    BLOQUE                         shift and go to state 68

state 55

    (3) vars -> dec1 ID EQUAL vars1 SEMICOLON vars .

    FUNCTION        reduce using rule 3 (vars -> dec1 ID EQUAL vars1 SEMICOLON vars .)
    BEGIN           reduce using rule 3 (vars -> dec1 ID EQUAL vars1 SEMICOLON vars .)
    $end            reduce using rule 3 (vars -> dec1 ID EQUAL vars1 SEMICOLON vars .)
    COMA            reduce using rule 3 (vars -> dec1 ID EQUAL vars1 SEMICOLON vars .)
    END             reduce using rule 3 (vars -> dec1 ID EQUAL vars1 SEMICOLON vars .)
    RPAREN          reduce using rule 3 (vars -> dec1 ID EQUAL vars1 SEMICOLON vars .)


state 56

    (8) vars1 -> COMA ID EQUAL . vars1
    (7) vars1 -> . F
    (8) vars1 -> . COMA ID EQUAL vars1
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    COMA            shift and go to state 30
    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    vars1                          shift and go to state 69
    F                              shift and go to state 29
    IDCTE                          shift and go to state 31

state 57

    (29) F -> LPAREN E RPAREN .

    SEMICOLON       reduce using rule 29 (F -> LPAREN E RPAREN .)
    TIMES           reduce using rule 29 (F -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 29 (F -> LPAREN E RPAREN .)
    PLUS            reduce using rule 29 (F -> LPAREN E RPAREN .)
    MINUS           reduce using rule 29 (F -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 29 (F -> LPAREN E RPAREN .)
    COMA            reduce using rule 29 (F -> LPAREN E RPAREN .)


state 58

    (31) E -> T PLUS . E
    (30) E -> . T
    (31) E -> . T PLUS E
    (32) E -> . T MINUS E
    (33) T -> . F
    (34) T -> . F TIMES T
    (35) T -> . F DIVIDE T
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    T                              shift and go to state 45
    E                              shift and go to state 70
    F                              shift and go to state 46
    IDCTE                          shift and go to state 31

state 59

    (32) E -> T MINUS . E
    (30) E -> . T
    (31) E -> . T PLUS E
    (32) E -> . T MINUS E
    (33) T -> . F
    (34) T -> . F TIMES T
    (35) T -> . F DIVIDE T
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    T                              shift and go to state 45
    E                              shift and go to state 71
    F                              shift and go to state 46
    IDCTE                          shift and go to state 31

state 60

    (34) T -> F TIMES . T
    (33) T -> . F
    (34) T -> . F TIMES T
    (35) T -> . F DIVIDE T
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    F                              shift and go to state 46
    T                              shift and go to state 72
    IDCTE                          shift and go to state 31

state 61

    (35) T -> F DIVIDE . T
    (33) T -> . F
    (34) T -> . F TIMES T
    (35) T -> . F DIVIDE T
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    F                              shift and go to state 46
    T                              shift and go to state 73
    IDCTE                          shift and go to state 31

state 62

    (13) BR -> SEMICOLON ESTATUTO BR .

    END             reduce using rule 13 (BR -> SEMICOLON ESTATUTO BR .)


state 63

    (15) ESTATUTO -> IF LPAREN F RPAREN . THEN ESTATUTO IF1

    THEN            shift and go to state 74


state 64

    (16) ESTATUTO -> WHILE LPAREN F RPAREN . ESTATUTO END
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    END             reduce using rule 12 (BLOQUE -> .)

  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 75
    BLOQUE                         shift and go to state 25

state 65

    (17) ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL . ESTATUTO END
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    END             reduce using rule 12 (BLOQUE -> .)

  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 76
    BLOQUE                         shift and go to state 25

state 66

    (23) DW1 -> SEMICOLON ESTATUTO . DW1
    (23) DW1 -> . SEMICOLON ESTATUTO DW1
    (24) DW1 -> .

    SEMICOLON       shift and go to state 52
    UNTIL           reduce using rule 24 (DW1 -> .)

    DW1                            shift and go to state 77

state 67

    (18) ESTATUTO -> FOR LPAREN vars COMA . F COMA vars RPAREN ESTATUTO END
    (28) F -> . IDCTE
    (29) F -> . LPAREN E RPAREN
    (36) IDCTE -> . ID
    (37) IDCTE -> . CTE_INT
    (38) IDCTE -> . CTE_FL

    LPAREN          shift and go to state 32
    ID              shift and go to state 27
    CTE_INT         shift and go to state 33
    CTE_FL          shift and go to state 34

    F                              shift and go to state 78
    IDCTE                          shift and go to state 31

state 68

    (9) MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE . END MODULO

    END             shift and go to state 79


state 69

    (8) vars1 -> COMA ID EQUAL vars1 .

    SEMICOLON       reduce using rule 8 (vars1 -> COMA ID EQUAL vars1 .)


state 70

    (31) E -> T PLUS E .

    RPAREN          reduce using rule 31 (E -> T PLUS E .)


state 71

    (32) E -> T MINUS E .

    RPAREN          reduce using rule 32 (E -> T MINUS E .)


state 72

    (34) T -> F TIMES T .

    PLUS            reduce using rule 34 (T -> F TIMES T .)
    MINUS           reduce using rule 34 (T -> F TIMES T .)
    RPAREN          reduce using rule 34 (T -> F TIMES T .)


state 73

    (35) T -> F DIVIDE T .

    PLUS            reduce using rule 35 (T -> F DIVIDE T .)
    MINUS           reduce using rule 35 (T -> F DIVIDE T .)
    RPAREN          reduce using rule 35 (T -> F DIVIDE T .)


state 74

    (15) ESTATUTO -> IF LPAREN F RPAREN THEN . ESTATUTO IF1
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for ELSE resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    ELSE            reduce using rule 12 (BLOQUE -> .)
    SEMICOLON       reduce using rule 12 (BLOQUE -> .)
    END             reduce using rule 12 (BLOQUE -> .)
    UNTIL           reduce using rule 12 (BLOQUE -> .)

  ! ELSE            [ reduce using rule 20 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 20 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 80
    BLOQUE                         shift and go to state 25

state 75

    (16) ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO . END

    END             shift and go to state 81


state 76

    (17) ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO . END

    END             shift and go to state 82


state 77

    (23) DW1 -> SEMICOLON ESTATUTO DW1 .

    UNTIL           reduce using rule 23 (DW1 -> SEMICOLON ESTATUTO DW1 .)


state 78

    (18) ESTATUTO -> FOR LPAREN vars COMA F . COMA vars RPAREN ESTATUTO END

    COMA            shift and go to state 83


state 79

    (9) MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE END . MODULO
    (9) MODULO -> . FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO
    (10) MODULO -> .

    FUNCTION        shift and go to state 13
    BEGIN           reduce using rule 10 (MODULO -> .)
    $end            reduce using rule 10 (MODULO -> .)

    MODULO                         shift and go to state 84

state 80

    (15) ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO . IF1
    (21) IF1 -> . ELSE ESTATUTO IF1
    (22) IF1 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 86
    SEMICOLON       reduce using rule 22 (IF1 -> .)
    END             reduce using rule 22 (IF1 -> .)
    UNTIL           reduce using rule 22 (IF1 -> .)

  ! ELSE            [ reduce using rule 22 (IF1 -> .) ]

    IF1                            shift and go to state 85

state 81

    (16) ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END .

    SEMICOLON       reduce using rule 16 (ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END .)
    END             reduce using rule 16 (ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END .)
    UNTIL           reduce using rule 16 (ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END .)
    ELSE            reduce using rule 16 (ESTATUTO -> WHILE LPAREN F RPAREN ESTATUTO END .)


state 82

    (17) ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .

    SEMICOLON       reduce using rule 17 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)
    END             reduce using rule 17 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)
    UNTIL           reduce using rule 17 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)
    ELSE            reduce using rule 17 (ESTATUTO -> DWHILE ESTATUTO DW1 UNTIL ESTATUTO END .)


state 83

    (18) ESTATUTO -> FOR LPAREN vars COMA F COMA . vars RPAREN ESTATUTO END
    (3) vars -> . dec1 ID EQUAL vars1 SEMICOLON vars
    (4) vars -> .
    (5) dec1 -> . TIPO COLON
    (6) dec1 -> .
    (39) TIPO -> . INT
    (40) TIPO -> . FL
    (41) TIPO -> . CHAR

    RPAREN          reduce using rule 4 (vars -> .)
    ID              reduce using rule 6 (dec1 -> .)
    INT             shift and go to state 9
    FL              shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 87
    dec1                           shift and go to state 7
    TIPO                           shift and go to state 8

state 84

    (9) MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO .

    BEGIN           reduce using rule 9 (MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO .)
    $end            reduce using rule 9 (MODULO -> FUNCTION ID LPAREN RPAREN vars BLOQUE END MODULO .)


state 85

    (15) ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1 .

    SEMICOLON       reduce using rule 15 (ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1 .)
    END             reduce using rule 15 (ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1 .)
    UNTIL           reduce using rule 15 (ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1 .)
    ELSE            reduce using rule 15 (ESTATUTO -> IF LPAREN F RPAREN THEN ESTATUTO IF1 .)


state 86

    (21) IF1 -> ELSE . ESTATUTO IF1
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for ELSE resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    ELSE            reduce using rule 12 (BLOQUE -> .)
    SEMICOLON       reduce using rule 12 (BLOQUE -> .)
    END             reduce using rule 12 (BLOQUE -> .)
    UNTIL           reduce using rule 12 (BLOQUE -> .)

  ! ELSE            [ reduce using rule 20 (ESTATUTO -> .) ]
  ! SEMICOLON       [ reduce using rule 20 (ESTATUTO -> .) ]
  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]
  ! UNTIL           [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 88
    BLOQUE                         shift and go to state 25

state 87

    (18) ESTATUTO -> FOR LPAREN vars COMA F COMA vars . RPAREN ESTATUTO END

    RPAREN          shift and go to state 89


state 88

    (21) IF1 -> ELSE ESTATUTO . IF1
    (21) IF1 -> . ELSE ESTATUTO IF1
    (22) IF1 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 86
    SEMICOLON       reduce using rule 22 (IF1 -> .)
    END             reduce using rule 22 (IF1 -> .)
    UNTIL           reduce using rule 22 (IF1 -> .)

  ! ELSE            [ reduce using rule 22 (IF1 -> .) ]

    IF1                            shift and go to state 90

state 89

    (18) ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN . ESTATUTO END
    (15) ESTATUTO -> . IF LPAREN F RPAREN THEN ESTATUTO IF1
    (16) ESTATUTO -> . WHILE LPAREN F RPAREN ESTATUTO END
    (17) ESTATUTO -> . DWHILE ESTATUTO DW1 UNTIL ESTATUTO END
    (18) ESTATUTO -> . FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END
    (19) ESTATUTO -> . BLOQUE
    (20) ESTATUTO -> .
    (11) BLOQUE -> . BEGIN ESTATUTO BR END
    (12) BLOQUE -> .

  ! reduce/reduce conflict for END resolved using rule 12 (BLOQUE -> .)
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    DWHILE          shift and go to state 23
    FOR             shift and go to state 24
    BEGIN           shift and go to state 17
    END             reduce using rule 12 (BLOQUE -> .)

  ! END             [ reduce using rule 20 (ESTATUTO -> .) ]

    ESTATUTO                       shift and go to state 91
    BLOQUE                         shift and go to state 25

state 90

    (21) IF1 -> ELSE ESTATUTO IF1 .

    ELSE            reduce using rule 21 (IF1 -> ELSE ESTATUTO IF1 .)
    SEMICOLON       reduce using rule 21 (IF1 -> ELSE ESTATUTO IF1 .)
    END             reduce using rule 21 (IF1 -> ELSE ESTATUTO IF1 .)
    UNTIL           reduce using rule 21 (IF1 -> ELSE ESTATUTO IF1 .)


state 91

    (18) ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO . END

    END             shift and go to state 92


state 92

    (18) ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END .

    SEMICOLON       reduce using rule 18 (ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END .)
    END             reduce using rule 18 (ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END .)
    UNTIL           reduce using rule 18 (ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END .)
    ELSE            reduce using rule 18 (ESTATUTO -> FOR LPAREN vars COMA F COMA vars RPAREN ESTATUTO END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 80 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 88 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 23 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 23
WARNING: reduce/reduce conflict in state 36 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 36
WARNING: reduce/reduce conflict in state 52 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 52
WARNING: reduce/reduce conflict in state 64 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 65 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 65
WARNING: reduce/reduce conflict in state 74 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 74
WARNING: reduce/reduce conflict in state 86 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 86
WARNING: reduce/reduce conflict in state 89 resolved using rule (BLOQUE -> <empty>)
WARNING: rejected rule (ESTATUTO -> <empty>) in state 89
WARNING: Rule (ESTATUTO -> <empty>) is never reduced
